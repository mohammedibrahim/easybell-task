<?php

namespace Container4JULiPr;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSymfonyInMemoryDomainQueryBusService extends EasyBell_Apps_Product_ProductKernelDevDebugContainer
{
    /**
     * Gets the private 'EasyBell\Shared\Infrastructure\Bus\Query\SymfonyInMemoryDomainQueryBus' shared autowired service.
     *
     * @return \EasyBell\Shared\Infrastructure\Bus\Query\SymfonyInMemoryDomainQueryBus
     */
    public static function do($container, $lazyLoad = true)
    {
        if (true === $lazyLoad) {
            return $container->privates['EasyBell\\Shared\\Infrastructure\\Bus\\Query\\SymfonyInMemoryDomainQueryBus'] = $container->createProxy('SymfonyInMemoryDomainQueryBusGhostD70b5f6', static fn () => \SymfonyInMemoryDomainQueryBusGhostD70b5f6::createLazyGhost(static fn ($proxy) => self::do($container, $proxy)));
        }

        include_once \dirname(__DIR__, 6).'/src/Shared/Domain/Bus/Query/QueryBus.php';
        include_once \dirname(__DIR__, 6).'/src/Shared/Infrastructure/Bus/Query/SymfonyInMemoryDomainQueryBus.php';

        return ($lazyLoad->__construct(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['EasyBell\\Product\\Application\\Filter\\FilterProductQueryHandler'] ?? $container->load('getFilterProductQueryHandlerService'));
            yield 1 => ($container->privates['EasyBell\\Product\\Application\\Get\\GetProductQueryHandler'] ?? $container->load('getGetProductQueryHandlerService'));
        }, 2)) && false ?: $lazyLoad);
    }
}
